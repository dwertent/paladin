name: Operator Build

on:
  workflow_call:
    inputs:
      paladin-image:
        required: true
        type: string
      paladin-image-tag:
        required: true
        type: string
      operator-image:
        required: true
        type: string
      operator-image-tag:
        required: true
        type: string
      build-operator:
        required: false
        type: boolean
        default: false
      build-paladin:
        required: false
        type: boolean
        default: false
  workflow_dispatch:
    inputs:
      paladin-image:
        required: true
        type: string
      paladin-image-tag:
        required: true
        type: string
      operator-image:
        required: true
        type: string
      operator-image-tag:
        required: true
        type: string
      build-operator:
        required: false
        type: boolean
        default: false
      build-paladin:
        required: false
        type: boolean
        default: false
jobs:
  operator-build:
    runs-on: ubuntu-latest
    env:
      CLUSTER_NAME: paladin
      NAMESPACE: paladin

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Install pre-requisites
        uses: ./.github/actions/setup

      - name: Install Kind
        uses: helm/kind-action@v1
        with:
          install_only: true # only install kind, the cluster creation is managed by the deploy step
          ignore_failed_clean: true

      - name: Download docker artifacts
        uses: actions/download-artifact@v4
        with:
          path: /tmp # download all docker images to /tmp
          pattern: paladin-*
          merge-multiple: true
      
      - name: Load image
        run: |
          docker load --input /tmp/paladin-operator-${{ github.sha }}.tar
          docker pull ${{ inputs.paladin-image }}:${{ inputs.paladin-image-tag }}
          docker image ls -a  
      
      # The makefile uses kustomize
      - uses: imranismail/setup-kustomize@v2

      - name: E2E Test
        run: |
          ./gradlew --no-daemon --parallel e2e \
            -PclusterName=${{ env.CLUSTER_NAME }} \
            -Pnamespace=${{ env.NAMESPACE }} \
            -PbuildOperator=${{ inputs.build-operator }} \
            -PbuildPaladin=${{ inputs.build-paladin }} \
            -PoperatorImageName=${{ inputs.operator-image }} \
            -PoperatorImageTag=${{ inputs.operator-image-tag }} \
            -PpaladinImageName=${{ inputs.paladin-image }} \
            -PpaladinImageTag=${{ inputs.paladin-image-tag }} \
            -PdeleteCluster=false

      - name: Save logs
        if: failure()
        run: |
          kubectl logs deployment/paladin-operator -n ${{ env.NAMESPACE }} > operator.log
          kubectl logs statefulset/paladin-node1 -n ${{ env.NAMESPACE }} > sfs-1.log
          kubectl logs statefulset/paladin-node2 -n ${{ env.NAMESPACE }} > sfs-2.log
          kubectl logs statefulset/paladin-node3 -n ${{ env.NAMESPACE }} > sfs-3.log
          kubectl get paladin node1 -n ${{ env.NAMESPACE }} -o json > paladin-1.json
          kubectl get paladin node2 -n ${{ env.NAMESPACE }} -o json > paladin-2.json
          kubectl get paladin node3 -n ${{ env.NAMESPACE }} -o json > paladin-3.json

          # Get trace from paladin-node1
          kubectl exec statefulset/paladin-node1 -n ${{ env.NAMESPACE }} -- kill -QUIT 1
          kubectl logs statefulset/paladin-node1 -n ${{ env.NAMESPACE }} > trace-node1.log

          # Get trace from paladin-node2
          kubectl exec statefulset/paladin-node2 -n ${{ env.NAMESPACE }} -- kill -QUIT 1
          kubectl logs statefulset/paladin-node2 -n ${{ env.NAMESPACE }} > trace-node2.log

          # Get trace from paladin-node3
          kubectl exec statefulset/paladin-node3 -n ${{ env.NAMESPACE }} -- kill -QUIT 1
          kubectl logs statefulset/paladin-node3 -n ${{ env.NAMESPACE }} > trace-node3.log

      - name: Upload logs
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: paladin-logs
          path: |
            operator.log
            sfs-1.log
            sfs-2.log
            sfs-3.log
            paladin-1.json
            paladin-2.json
            paladin-3.json
            trace-node1.log
            trace-node2.log
            trace-node3.log
