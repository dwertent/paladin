name: Paladin Operator Build

on:
  pull_request:
    paths:
      - 'operator/**'
  workflow_dispatch:

# Ensure this workflow only runs for the most recent commit of a pull-request
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  operator-build:
    runs-on: ubuntu-latest
    env:
      CLUSTER_NAME: paladin
      NAMESPACE: paladin

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive

      # Install protoc only on non-Windows systems
      - name: Install protoc
        run: |
          PB_REL="https://github.com/protocolbuffers/protobuf/releases"
          curl -LO $PB_REL/download/v25.1/protoc-25.1-linux-x86_64.zip
          unzip protoc-25.1-linux-x86_64.zip -d protoc
          echo "${PWD}/protoc/bin" >> $GITHUB_PATH

      # Set up Java
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 21

      # Set up Go
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'
          check-latest: true
          cache-dependency-path: |
            **/*.sum

      # Set up Gradle
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      # - name: Go Lint
      #   working-directory: operator
      #   run: make lint

      # - name: Unit Tests
      #   working-directory: operator
      #   run: make test

      - name: Install Kind
        uses: helm/kind-action@v1
        with:
          install_only: true # only install kind, the cluster creation is managed by the deploy step
          ignore_failed_clean: true
      
      # The makefile uses kustomize
      - uses: imranismail/setup-kustomize@v2

      - name: Deploy Operator
        run: ./gradlew deploy -PclusterName=${{ env.CLUSTER_NAME }} -Pnamespace=${{ env.NAMESPACE }} 

      - name: Uninstall Operator
        run: ./gradlew clean -PclusterName=${{ env.CLUSTER_NAME }} -Pnamespace=${{ env.NAMESPACE }} -PdeleteCluster=true